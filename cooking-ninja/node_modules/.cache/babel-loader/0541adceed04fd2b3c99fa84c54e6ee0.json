{"ast":null,"code":"var _jsxFileName = \"/Volumes/4TBSamsungEvo860/Code/STUDY/The Net Ninja/React/Chapter 11/cooking-ninja/src/context/ThemeContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return { ...state,\n        color: action.payload\n      };\n\n    case 'CHANGE_MODE':\n      return { ...state,\n        mode: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(themeReducer, {\n    color: 'black',\n    mode: 'dark'\n  });\n\n  const changeColor = color => {\n    dispatch({\n      type: 'CHANGE_COLOR',\n      payload: color\n    });\n  };\n\n  const changeMode = mode => {\n    dispatch({\n      type: 'CHANGE_MODE',\n      payload: mode\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: { ...state,\n      changeColor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThemeProvider, \"xtQb9WNrKn4eQpsGz8oLSqi3th4=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Volumes/4TBSamsungEvo860/Code/STUDY/The Net Ninja/React/Chapter 11/cooking-ninja/src/context/ThemeContext.js"],"names":["createContext","useReducer","ThemeContext","themeReducer","state","action","type","color","payload","mode","ThemeProvider","children","dispatch","changeColor","changeMode"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;;AAEP,MAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAA1B,OAAP;;AACJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYK,QAAAA,IAAI,EAAEJ,MAAM,CAACG;AAAzB,OAAP;;AACJ;AACI,aAAOJ,KAAP;AANR;AAQH,CATD;;AAWA,OAAO,SAASM,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAAA;;AACxC,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBX,UAAU,CAACE,YAAD,EAAe;AAC/CI,IAAAA,KAAK,EAAE,OADwC;AAE/CE,IAAAA,IAAI,EAAE;AAFyC,GAAf,CAApC;;AAKA,QAAMI,WAAW,GAAIN,KAAD,IAAW;AAC3BK,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE,cAAR;AAAwBE,MAAAA,OAAO,EAAED;AAAjC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMO,UAAU,GAAIL,IAAD,IAAU;AACzBG,IAAAA,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAAE,aAAP;AAAsBE,MAAAA,OAAO,EAAEC;AAA/B,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,EAAC,GAAGL,KAAJ;AAAWS,MAAAA;AAAX,KAA9B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnBeD,a;;KAAAA,a","sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const ThemeContext = createContext()\n\nconst themeReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE_COLOR':\n            return { ...state, color: action.payload }\n        case 'CHANGE_MODE':\n            return { ...state, mode: action.payload}\n        default:\n            return state\n    }\n}\n\nexport function ThemeProvider({ children }) {\n    const [state, dispatch] = useReducer(themeReducer, {\n        color: 'black',\n        mode: 'dark'\n    })\n\n    const changeColor = (color) => {\n        dispatch({ type: 'CHANGE_COLOR', payload: color })\n    }\n\n    const changeMode = (mode) => {\n        dispatch({type: 'CHANGE_MODE', payload: mode })\n    }\n\n    return(\n        <ThemeContext.Provider value={{...state, changeColor }}>\n            {children}\n        </ThemeContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}