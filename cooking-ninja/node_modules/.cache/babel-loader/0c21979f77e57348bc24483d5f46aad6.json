{"ast":null,"code":"var _jsxFileName = \"/Volumes/4TBSamsungEvo860/Code/STUDY/The Net Ninja/React/Chapter 11/cooking-ninja/src/components/RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useTheme } from '../hooks/useTheme'; //import { classList } from 'react-classlist'\n//styles\n\nimport './recipeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipeList({\n  recipes\n}) {\n  _s();\n\n  const {\n    mode,\n    color,\n    changeColor\n  } = useTheme();\n  const hoverColorItems = document.querySelectorAll('.hoverColor');\n\n  if (recipes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"No recipes to load...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  function handleHover() {\n    this.setState(prevState => {\n      isHovered: !prevState.isHovered;\n    });\n  }\n\n  hoverColorItems.forEach(item => {\n    item.state = {\n      isHovered: false\n    };\n    this.handleHover = this.handleHover.bind(this);\n  });\n  render();\n  {\n    const hoverColor = this.state.isHovered ? \"hoverColorActive\" : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-list\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${mode}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.cookingTime, \" to make.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [recipe.method.substring(0, 100), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipes/${recipe.id}`,\n          className: \"button hoverColor\",\n          onMouseEnter: this.handleHover,\n          onMouseLeave: this.handleHover,\n          children: \"Cook This\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(RecipeList, \"eZ6hpgQAPuw3Y+i0RVa/24AghBA=\", false, function () {\n  return [useTheme];\n});\n\n_c = RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Volumes/4TBSamsungEvo860/Code/STUDY/The Net Ninja/React/Chapter 11/cooking-ninja/src/components/RecipeList.js"],"names":["Link","useTheme","RecipeList","recipes","mode","color","changeColor","hoverColorItems","document","querySelectorAll","length","handleHover","setState","prevState","isHovered","forEach","item","state","bind","render","hoverColor","map","recipe","title","cookingTime","method","substring","id"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CACA;AAEA;;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAiC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA+BL,QAAQ,EAA7C;AACA,QAAMM,eAAe,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,CAAxB;;AAEA,MAAIN,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;AACxB,wBAAO;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,WAASC,WAAT,GAAuB;AACrB,SAAKC,QAAL,CAAcC,SAAS,IAAI;AACvBC,MAAAA,SAAS,EAAE,CAACD,SAAS,CAACC,SAAX;AACd,KAFD;AAGD;;AAEDP,EAAAA,eAAe,CAACQ,OAAhB,CAAyBC,IAAD,IAAU;AAChCA,IAAAA,IAAI,CAACC,KAAL,GAAa;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAb;AACA,SAAKH,WAAL,GAAmB,KAAKA,WAAL,CAAiBO,IAAjB,CAAsB,IAAtB,CAAnB;AACD,GAHD;AAKAC,EAAAA,MAAM;AAAI;AACR,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWH,SAAX,GAAuB,kBAAvB,GAA4C,EAA/D;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGX,OAAO,CAACkB,GAAR,CAAYC,MAAM,iBACf;AAAqB,QAAA,SAAS,EAAG,QAAOlB,IAAK,EAA7C;AAAA,gCACI;AAAA,oBAAKkB,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,qBAAID,MAAM,CAACE,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,qBAAMF,MAAM,CAACG,MAAP,CAAcC,SAAd,CAAwB,CAAxB,EAA2B,GAA3B,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,IAAD;AACE,UAAA,EAAE,EAAG,YAAWJ,MAAM,CAACK,EAAG,EAD5B;AAEE,UAAA,SAAS,EAAC,mBAFZ;AAGE,UAAA,YAAY,EAAE,KAAKhB,WAHrB;AAIE,UAAA,YAAY,EAAE,KAAKA,WAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAUW,MAAM,CAACK,EAAjB;AAAA;AAAA;AAAA;AAAA,cADH;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;AACF;;GAxCuBzB,U;UACeD,Q;;;KADfC,U","sourcesContent":["import { Link } from 'react-router-dom'\nimport { useTheme } from '../hooks/useTheme'\n//import { classList } from 'react-classlist'\n\n//styles\nimport './recipeList.css'\n\nexport default function RecipeList( {recipes} ) {\n  const { mode, color, changeColor } = useTheme()\n  const hoverColorItems = document.querySelectorAll('.hoverColor');\n\n  if (recipes.length === 0) {\n    return <div className=\"error\">No recipes to load...</div>\n  }\n\n  function handleHover() {\n    this.setState(prevState => {\n        isHovered: !prevState.isHovered\n    })\n  }\n\n  hoverColorItems.forEach((item) => {\n    item.state = { isHovered: false}\n    this.handleHover = this.handleHover.bind(this)\n  })\n\n  render(); {\n    const hoverColor = this.state.isHovered ? \"hoverColorActive\" : \"\";\n\n    return (\n      <div className=\"recipe-list\">\n        {recipes.map(recipe => (\n            <div key={recipe.id} className={`card ${mode}`}>\n                <h3>{recipe.title}</h3>\n                <p>{recipe.cookingTime} to make.</p>\n                <div>{recipe.method.substring(0, 100)}...</div>\n                <Link \n                  to={`/recipes/${recipe.id}`} \n                  className=\"button hoverColor\"\n                  onMouseEnter={this.handleHover} \n                  onMouseLeave={this.handleHover}\n                >Cook This</Link>\n            </div>\n        ))}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}