{"ast":null,"code":"var _jsxFileName = \"/Volumes/4TBSamsungEvo860/Code/STUDY/The Net Ninja/React/Chapter 11/cooking-ninja/src/pages/create/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { useFetch } from '../../hooks/useFetch';\nimport { BrowserRouter, Route } from 'react-router-dom'; //styles\n\nimport './create.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [method, setMethod] = useState('');\n  const [cookingTime, setCookingTime] = useState('');\n  const [newIngredient, setNewIngredient] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const ingredientInput = useRef(null);\n  const url = 'http://localhost:3001/';\n  const {\n    postData,\n    data,\n    error\n  } = useFetch('http://localhost:3000/recipes', 'POST');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    postData({\n      title,\n      ingredients,\n      method,\n      cookingTime: cookingTime + ' minutes'\n    });\n  };\n\n  const handleAdd = e => {\n    e.preventDefault();\n    const ing = newIngredient.trim();\n\n    if (ing && !ingredients.includes(ing)) {\n      setIngredients(prevIngredients => [...prevIngredients, newIngredient]);\n    }\n\n    setNewIngredient('');\n    ingredientInput.current.focus();\n  };\n\n  const handleRefresh = (data, e) => {\n    if (data.value === !null) {\n      this.context.router.history.push({\n        url\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Add a New Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: (handleSubmit, handleRefresh),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"RecipeTitle:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setTitle(e.target.value),\n          value: title,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Recipe Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setNewIngredient(e.target.value),\n            value: newIngredient,\n            ref: ingredientInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAdd,\n            className: \"btn\",\n            children: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Ingredients: \", ingredients.map(i => /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [i, \", \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 55\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Recipe Method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: e => setMethod(e.target.value),\n          value: method,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Cooking time (minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setCookingTime(e.target.value),\n          value: cookingTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"VjcEPY5ooWv0KRdPV7f9y8XvMZw=\", false, function () {\n  return [useFetch];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Volumes/4TBSamsungEvo860/Code/STUDY/The Net Ninja/React/Chapter 11/cooking-ninja/src/pages/create/Create.js"],"names":["useState","useRef","useFetch","BrowserRouter","Route","Create","title","setTitle","method","setMethod","cookingTime","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientInput","url","postData","data","error","handleSubmit","e","preventDefault","handleAdd","ing","trim","includes","prevIngredients","current","focus","handleRefresh","value","context","router","history","push","target","map","i"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react'\nimport { useFetch } from '../../hooks/useFetch'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n//styles\nimport './create.css'\n\nexport default function Create() {\n  const [title, setTitle] = useState('')\n  const [method, setMethod] = useState('')\n  const [cookingTime, setCookingTime] = useState('')\n  const [newIngredient, setNewIngredient] = useState('')\n  const [ingredients, setIngredients] = useState([])\n  const ingredientInput = useRef(null)\n  const url = 'http://localhost:3001/'\n\n  const {postData, data, error } = useFetch('http://localhost:3000/recipes', 'POST')\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    postData({title, ingredients, method, cookingTime: cookingTime + ' minutes'})\n  }\n\n  const handleAdd = (e) => {\n    e.preventDefault()\n    const ing = newIngredient.trim()\n\n    if (ing && !ingredients.includes(ing)) {\n      setIngredients(prevIngredients => [...prevIngredients, newIngredient])\n    }\n    setNewIngredient('')\n    ingredientInput.current.focus()\n\n  }\n\n  const handleRefresh = (data, e) => {\n    if ( data.value === !null ) {\n      this.context.router.history.push({ url })\n    }\n  }\n\n  \n  return (\n    <div className=\"create\">\n      <h2 className=\"page-title\">Add a New Recipe</h2>\n\n      <form onSubmit={handleSubmit, handleRefresh}>\n        <label>\n          <span>RecipeTitle:</span>\n          <input \n            type=\"text\" \n            onChange={(e) => setTitle(e.target.value)} \n            value={title}\n            required>\n          </input>\n        </label>\n\n        <label>\n          <span>Recipe Ingredients:</span>\n          <div className=\"ingredients\">\n            <input \n              type=\"text\"\n              onChange={(e) => setNewIngredient(e.target.value)}\n              value={newIngredient}\n              ref={ingredientInput}\n            />\n            <button onClick={handleAdd} className=\"btn\">add</button>\n          </div>\n        </label>\n        <p>Current Ingredients: {ingredients.map(i => <em key={i}>{i}, </em>)}</p>\n\n        <label>\n          <span>Recipe Method:</span>\n          <textarea \n            onChange={(e) => setMethod(e.target.value)} \n            value={method} \n            required\n          />\n        </label>\n\n        <label>\n          <span>Cooking time (minutes):</span>\n          <input \n            type=\"number\"\n            onChange={(e) => setCookingTime(e.target.value)}\n            value={cookingTime}\n          />\n        </label>\n\n        <button className=\"btn\">Submit</button>\n\n      </form>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}